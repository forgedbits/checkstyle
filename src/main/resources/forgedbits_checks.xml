<?xml version="1.0"?>
<!DOCTYPE module PUBLIC
		"-//Puppy Crawl//DTD Check Configuration 1.3//EN"
		"http://www.puppycrawl.com/dtds/configuration_1_3.dtd">

<module name="Checker">

	<!-- Checks that a package-info.java file exists for each package.   -->
	<!-- See http://checkstyle.sourceforge.net/config_javadoc.html#JavadocPackage -->
	<!--<module name="JavadocPackage"/>-->

	<!-- Checks whether files end with a new line.                        -->
	<!-- See http://checkstyle.sourceforge.net/config_misc.html#NewlineAtEndOfFile -->
	<!--<module name="NewlineAtEndOfFile"/>-->

	<!-- Checks that property files contain the same keys.         -->
	<!-- See http://checkstyle.sourceforge.net/config_misc.html#Translation -->
	<!--<module name="Translation"/>-->

	<!-- Checks for Size Violations.                    -->
	<!-- See http://checkstyle.sourceforge.net/config_sizes.html -->
	<module name="FileLength"/>

	<!-- Checks for whitespace                               -->
	<!-- See http://checkstyle.sourceforge.net/config_whitespace.html -->
	<!--<module name="FileTabCharacter"/>-->

	<!-- Miscellaneous other checks.                   -->
	<!-- See http://checkstyle.sourceforge.net/config_regexp.html -->
	<module name="RegexpSingleline">
		<property name="format" value="\s+$"/>
		<property name="message" value="Line has trailing spaces."/>
	</module>
	<module name="RegexpSingleline">
		<property name="format" value="^\s*;\s*$"/>
		<property name="message" value="Line has empty semicolon."/>
	</module>
	<module name="RegexpMultiline">
		<property name="format" value="\\u0[01](\d[A-F]|[A-F]\d)"/>
		<property name="fileExtensions" value="properties"/>
		<property name="message" value="Unicode is specified with uppercase (A-F) - use uppercase (a-f) e.g. \u00f3"/>
	</module>
	<module name="RegexpMultiline">
		<property name="format" value="^.* class .* \{\n\t"/>
		<property name="fileExtensions" value="java"/>
		<property name="message" value="The new line is required after definition of class"/>
	</module>

	<module name="TreeWalker">
		<property name="tabWidth" value="4"/>

		<!-- Checks for Naming Conventions.                  -->
		<!-- See http://checkstyle.sourceforge.net/config_naming.html -->
		<module name="ConstantName">
			<!-- Standard checker without 'LOG' or log value allowed -->
			<!-- Allowed : e.g. DEFAULT_FIRST_PAID_DAY, log -->
			<!-- Not allowed : e.g. LOG, 123, default_first, defaultFirst -->
			<property name="format" value="^(?!LOG$)[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$|^log$"/>
			<message key="name.invalidPattern"
					 value="Variable ''{0}'' should consist of uppercase letters, digits and underscores. 
						Remark : ''LOG'' is NOT allowed - use ''log''"/>
		</module>
		<module name="LocalFinalVariableName"/>
		<module name="LocalVariableName"/>
		<module name="MemberName"/>
		<module name="MethodName"/>
		<module name="PackageName"/>
		<module name="ParameterName"/>
		<module name="StaticVariableName"/>
		<module name="TypeName"/>

		<!-- Checks for Headers                                -->
		<!-- See http://checkstyle.sourceforge.net/config_header.html   -->
		<!-- <module name="Header">                            -->
		<!-- The follow property value demonstrates the ability     -->
		<!-- to have access to ANT properties. In this case it uses -->
		<!-- the ${basedir} property to allow Checkstyle to be run  -->
		<!-- from any directory within a project. See property      -->
		<!-- expansion,                                             -->
		<!-- http://checkstyle.sourceforge.net/config.html#properties        -->
		<!-- <property                                              -->
		<!--     name="headerFile"                                  -->
		<!--     value="${basedir}/java.header"/>                   -->
		<!-- </module> -->

		<!-- Following interprets the header file as regular expressions. -->
		<!-- <module name="RegexpHeader"/>                                -->


		<!-- Checks for imports                              -->
		<!-- See http://checkstyle.sourceforge.net/config_imports.html -->
		<module name="AvoidStarImport"/>
		<module name="IllegalImport"/>
		<module name="RedundantImport"/>
		<module name="UnusedImports"/>
		<module name="ImportOrder">
			<property name="separated" value="true"/>
			<property name="option" value="under"/>
		</module>


		<!-- Checks for Size Violations.                    -->
		<!-- See http://checkstyle.sourceforge.net/config_sizes.html -->
		<module name="LineLength">
			<property name="max" value="120"/>
		</module>
		<module name="MethodLength"/>
		<module name="ParameterNumber">
			<property name="max" value="6"/>
		</module>
		<module name="AnonInnerLength">
			<property name="max" value="50"/>
		</module>

		<!-- Checks for whitespace                               -->
		<!-- See http://checkstyle.sourceforge.net/config_whitespace.html -->
		<!--<module name="EmptyForIteratorPad"/>-->
		<module name="GenericWhitespace"/>
		<!--<module name="MethodParamPad"/>-->
		<module name="NoWhitespaceBefore"/>
		<module name="NoWhitespaceAfter"/>
		<!--<module name="OperatorWrap"/>-->
		<!--<module name="ParenPad"/>-->
		<!--<module name="TypecastParenPad"/>-->
		<module name="WhitespaceAfter"/>
		<module name="WhitespaceAround">
			<property name="tokens" value="ASSIGN, BAND, BAND_ASSIGN, BOR,
			BOR_ASSIGN, BSR, BSR_ASSIGN, BXOR, BXOR_ASSIGN, COLON, DIV, DIV_ASSIGN,
			EQUAL, GE, GT, LAND, LE, LITERAL_CATCH, LITERAL_DO, LITERAL_ELSE,
			LITERAL_FINALLY, LITERAL_FOR, LITERAL_IF, LITERAL_RETURN,
			LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_WHILE, LOR, LT, MINUS,
			MINUS_ASSIGN, MOD, MOD_ASSIGN, NOT_EQUAL, PLUS, PLUS_ASSIGN, QUESTION,
			SL, SL_ASSIGN, SR_ASSIGN, STAR, STAR_ASSIGN, LCURLY"/>
			<property name="severity" value="error"/>
		</module>

		<!-- Modifier Checks                                    -->
		<!-- See http://checkstyle.sourceforge.net/config_modifier.html -->
		<module name="ModifierOrder"/>
		<module name="RedundantModifier"/>


		<!-- Checks for blocks. You know, those {}'s         -->
		<!-- See http://checkstyle.sourceforge.net/config_blocks.html -->
		<module name="AvoidNestedBlocks"/>
		<module name="EmptyBlock"/>
		<!--<module name="LeftCurly"/>-->
		<module name="NeedBraces"/>
		<!--<module name="RightCurly"/>-->


		<!-- Checks for common coding problems               -->
		<!-- See http://checkstyle.sourceforge.net/config_coding.html -->
		<!--<module name="AvoidInlineConditionals"/>-->
		<!--<module name="DoubleCheckedLocking"/>-->
		<module name="EmptyStatement"/>
		<module name="EqualsHashCode"/>
		<!--<module name="HiddenField"/>-->
		<!--<module name="IllegalInstantiation"/>-->
		<!--<module name="InnerAssignment"/>-->
		<!--<module name="MagicNumber"/>-->
		<!--<module name="MissingSwitchDefault"/>-->
		<!--<module name="RedundantThrows"/>-->
		<module name="SimplifyBooleanExpression"/>
		<module name="SimplifyBooleanReturn"/>
		<module name="DeclarationOrder"/>
		<module name="OneStatementPerLine"/>

		<!-- Checks for class design                         -->
		<!-- See http://checkstyle.sourceforge.net/config_design.html -->
		<!--<module name="DesignForExtension"/>-->
		<!--<module name="FinalClass"/>-->
		<!--<module name="HideUtilityClassConstructor"/>-->
		<!--<module name="InterfaceIsType"/>-->
		<!--<module name="VisibilityModifier"/>-->

		<!-- Miscellaneous other checks.                   -->
		<!-- See http://checkstyle.sourceforge.net/config_misc.html -->
		<!--<module name="ArrayTypeStyle"/>-->
		<!--<module name="FinalParameters"/>-->
		<!--<module name="TodoComment"/>-->
		<module name="UpperEll"/>
		<module name="UncommentedMain"/>

		<!-- Checks for uncommented main() methods (debugging leftovers) -->
		<module name="UncommentedMain"/>
	</module>
</module>
